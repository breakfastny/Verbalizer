The Verbalizer
==============

The Verbalizer is an open source hardware and software platform originally built for activating and performing Google's Voice Search for desktop. The platform is developed with amatuers and home tinkeres in mind, so it's got a low barrier of entry. The hardware is [Arduino-Compatible](http://arduino.cc/) and the desktop software is build on top of [OpenFrameworks](http://www.openframeworks.cc/).


The Harware Board
=================

The Verbalizer board is a microcontroller board based on ATMega328. It's Arduino-Compatible so all you need is a mini-USB cable and the Arduino IDE to start hacking. In addition to most of the features you normally expect from an Arduino board, it has an onboard bluetooth module (Liard BTM511) which supports audio profiles (HFP) and serial data (SPP) communication. It also features 2 built in capacitive touch sensors. 

The board operates at 3.3V and is best powered by a 3.6V lipo battery which can be charged when the USB cable is connected. The board has 2 digital I/O ports and 2 analog input pins available for the user. Max current for I/O pins are around 80mA.

Communication can be established either through the Bluetooth device or the onboard FTDI which channels serial data through USB. 

Verbalizer Desktop App
======================

Verbalizer.app runs on the desktop to receive commands from the board and executes the Voice Search in Chrome. It's currently developed for Mac OS X 10.6. The application connects over bluetooth to the the board and establishes an RFCOMM channel for serial data communication. There's a basic ASCII protocol between the app and the board where a client (either board or desktop app) sends a command and expects an `ACK_OK` status back. The ack protocol is implemented since messages and commands can easily
get lost due to naive programming (such as sleep/delays which are common in the Arduino world) on the board. The uC is using a software serial implementation to talk to the bluetooth module, which means that some serial data can get lost.

The desktop app is built on top of OpenFrameworks and is heavily tied to the OS X platform by using it's `IOBluetooth.framework` and `CoreAudio`.


[Verbalizer homepage](http://breakfastny.com/verbalizer)
